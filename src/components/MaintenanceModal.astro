---
// This component can be included in any page that needs maintenance reporting
---

<div id="maintenanceModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
  <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
    <div class="mt-3">
      <div class="flex items-center justify-between mb-4">
        <h3 class="text-lg font-medium text-gray-900">Report Maintenance Issue</h3>
        <button onclick="closeMaintenanceModal()" class="text-gray-400 hover:text-gray-600">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
      
      <form id="maintenanceForm" class="space-y-4">
        <input type="hidden" id="maintenanceBoatId" />
        <input type="hidden" id="maintenanceMemberNumber" />
        
        <div>
          <label for="issueType" class="block text-sm font-medium text-gray-700 mb-1">
            Issue Type
          </label>
          <select id="issueType" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-ocean-blue">
            <option value="">Select issue type</option>
            <option value="mechanical">Mechanical</option>
            <option value="safety">Safety</option>
            <option value="cosmetic">Cosmetic</option>
            <option value="other">Other</option>
          </select>
        </div>
        
        <div>
          <label for="severity" class="block text-sm font-medium text-gray-700 mb-1">
            Severity
          </label>
          <select id="severity" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-ocean-blue">
            <option value="low">Low - Minor issue</option>
            <option value="medium" selected>Medium - Moderate issue</option>
            <option value="high">High - Significant issue</option>
            <option value="critical">Critical - Safety concern</option>
          </select>
        </div>
        
        <div>
          <label for="issueDescription" class="block text-sm font-medium text-gray-700 mb-1">
            Description
          </label>
          <textarea 
            id="issueDescription" 
            required 
            rows="4" 
            placeholder="Describe the issue in detail..."
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-ocean-blue"
          ></textarea>
        </div>
        
        <div class="flex space-x-3">
          <button 
            type="submit" 
            class="flex-1 px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500"
          >
            Report Issue
          </button>
          <button 
            type="button" 
            onclick="closeMaintenanceModal()"
            class="flex-1 px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-500"
          >
            Cancel
          </button>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
  function openMaintenanceModal(boatId, memberNumber) {
    document.getElementById('maintenanceBoatId').value = boatId;
    document.getElementById('maintenanceMemberNumber').value = memberNumber;
    document.getElementById('maintenanceModal').classList.remove('hidden');
  }
  
  function closeMaintenanceModal() {
    document.getElementById('maintenanceModal').classList.add('hidden');
    document.getElementById('maintenanceForm').reset();
  }

  function showMaintenanceSuccess(issueId) {
    // Create a success overlay
    const successOverlay = document.createElement('div');
    successOverlay.className = 'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50';
    successOverlay.innerHTML = `
      <div class="bg-white rounded-lg shadow-xl max-w-md w-full mx-4 p-6 text-center">
        <div class="text-6xl mb-4">ðŸ”§</div>
        <h2 class="text-2xl font-bold text-green-600 mb-4">Issue Reported Successfully!</h2>
        <p class="text-gray-700 mb-4">Your maintenance issue has been reported to the admin team.</p>
        <p class="text-sm text-gray-500 mb-6">Issue ID: #${issueId}</p>
        <div class="space-y-3">
          <button onclick="this.closest('.fixed').remove()" class="block w-full px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors">
            Continue with Check-in
          </button>
          <button onclick="this.closest('.fixed').remove(); window.location.reload();" class="block w-full px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">
            Refresh Page
          </button>
        </div>
        <p class="text-xs text-gray-500 mt-4">You can now complete your boat check-in process.</p>
      </div>
    `;
    
    document.body.appendChild(successOverlay);
    
    // Auto-remove after 8 seconds
    setTimeout(() => {
      if (successOverlay.parentNode) {
        successOverlay.remove();
      }
    }, 8000);
  }
  
  document.getElementById('maintenanceForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const boatId = document.getElementById('maintenanceBoatId').value;
    const memberNumber = document.getElementById('maintenanceMemberNumber').value;
    const issueType = document.getElementById('issueType').value;
    const severity = document.getElementById('severity').value;
    const description = document.getElementById('issueDescription').value;
    
    try {
      const response = await fetch('/api/maintenance', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          boat_id: boatId,
          reported_by_member_number: memberNumber,
          issue_type: issueType,
          description: description,
          severity: severity
        }),
      });
      
      const data = await response.json();
      
      if (data.success) {
        // Show success message with better UI
        showMaintenanceSuccess(data.issueId);
        closeMaintenanceModal();
        
        // Trigger any custom callback if defined
        if (window.onMaintenanceReported) {
          window.onMaintenanceReported(data.issueId);
        }
      } else {
        alert('Failed to report issue: ' + data.error);
      }
    } catch (error) {
      console.error('Error reporting maintenance issue:', error);
      alert('Failed to report maintenance issue');
    }
  });
  
  // Make functions globally available
  window.openMaintenanceModal = openMaintenanceModal;
  window.closeMaintenanceModal = closeMaintenanceModal;
</script> 