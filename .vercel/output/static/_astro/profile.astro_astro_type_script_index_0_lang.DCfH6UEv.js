const he="modulepreload",fe=function(e){return"/"+e},R={},be=function(t,o,s){let n=Promise.resolve();if(o&&o.length>0){let a=function(m){return Promise.all(m.map(u=>Promise.resolve(u).then(B=>({status:"fulfilled",value:B}),B=>({status:"rejected",reason:B}))))};document.getElementsByTagName("link");const i=document.querySelector("meta[property=csp-nonce]"),c=i?.nonce||i?.getAttribute("nonce");n=a(o.map(m=>{if(m=fe(m),m in R)return;R[m]=!0;const u=m.endsWith(".css"),B=u?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${m}"]${B}`))return;const h=document.createElement("link");if(h.rel=u?"stylesheet":he,u||(h.as="script"),h.crossOrigin="",h.href=m,c&&h.setAttribute("nonce",c),document.head.appendChild(h),u)return new Promise((pe,ge)=>{h.addEventListener("load",pe),h.addEventListener("error",()=>ge(new Error(`Unable to preload CSS for ${m}`)))})}))}function r(a){const i=new Event("vite:preloadError",{cancelable:!0});if(i.payload=a,window.dispatchEvent(i),!i.defaultPrevented)throw a}return n.then(a=>{for(const i of a||[])i.status==="rejected"&&r(i.reason);return t().catch(r)})};let M,g,X;be(()=>import("./auth.CEZs7c5s.js"),[]).then(e=>{M=e.setUserSession,g=e.getCurrentUser,X=e.clearUserSession,e.requireAuth,ye(),Ce()}).catch(e=>{console.error("Failed to load auth module:",e)});let d=null,j=null;function ye(){const e=g();e&&(j=e,d=e.member_number,document.getElementById("loginSection").classList.add("hidden"),document.getElementById("profileContent").classList.remove("hidden"),A(e.member_number),document.getElementById("pageTitle").textContent="My Sailing Profile",document.getElementById("pageDescription").textContent="Track your sailing adventures, connect with fellow sailors, and share your experiences.")}function ve(){const t=new URLSearchParams(window.location.search).get("returnUrl");if(t&&j){const o=window.location.pathname;window.history.replaceState({},document.title,o),setTimeout(()=>{window.location.href=t},1e3)}}const w=document.getElementById("memberNumber"),V=document.getElementById("pin"),Z=document.getElementById("loginForm");document.getElementById("loginSection");const Q=document.getElementById("profileContent"),W=document.getElementById("loading"),Y=document.getElementById("error"),we=document.getElementById("errorMessage"),b=document.getElementById("message"),L=document.getElementById("photoUploadForm"),_=document.getElementById("photoFile"),D=document.getElementById("photoCaption"),ee=document.getElementById("photoCount"),F=document.getElementById("uploadProgress"),k=document.getElementById("progressBar"),te=document.getElementById("progressText");console.log("Photo upload elements found:",{photoUploadForm:L,photoFileInput:_,photoCaptionInput:D,photoCountSpan:ee,uploadProgress:F,progressBar:k,progressText:te});const oe=document.getElementById("profilePhotoInput"),Ee=document.getElementById("uploadProfilePhotoBtn");document.getElementById("profileAvatar");document.getElementById("profileImage");document.getElementById("profileInitials");let x=0;const T=3,E=5*1024*1024,Ie=document.getElementById("editProfileBtn"),$=document.getElementById("editProfileModal"),xe=document.getElementById("closeEditModal"),Be=document.getElementById("editBioForm"),ne=document.getElementById("editBio");document.getElementById("tripsToDelete");document.getElementById("photosToDelete");const P=document.getElementById("removeProfilePhotoBtn");document.getElementById("modalProfileImage");document.getElementById("modalProfileInitials");document.getElementById("modalProfileAvatar");const z=document.querySelectorAll(".tab-btn"),Le=document.querySelectorAll(".tab-content");z.forEach(e=>{e.addEventListener("click",()=>{const t=e.dataset.tab;z.forEach(o=>{o.classList.remove("active","border-ocean-blue","text-ocean-blue"),o.classList.add("border-transparent","text-anchor-gray")}),e.classList.add("active","border-ocean-blue","text-ocean-blue"),e.classList.remove("border-transparent","text-anchor-gray"),Le.forEach(o=>{o.classList.add("hidden"),o.classList.remove("active")}),document.getElementById(`${t}Tab`).classList.remove("hidden"),document.getElementById(`${t}Tab`).classList.add("active"),Ne(t)})});const q=document.querySelectorAll(".other-tab-btn"),Pe=document.querySelectorAll(".other-tab-content");q.forEach(e=>{e.addEventListener("click",()=>{const t=e.dataset.tab;q.forEach(o=>{o.classList.remove("active","border-ocean-blue","text-ocean-blue"),o.classList.add("border-transparent","text-anchor-gray")}),e.classList.add("active","border-ocean-blue","text-ocean-blue"),e.classList.remove("border-transparent","text-anchor-gray"),Pe.forEach(o=>{o.classList.add("hidden"),o.classList.remove("active")}),document.getElementById(`other${t.charAt(0).toUpperCase()+t.slice(1)}Tab`).classList.remove("hidden"),document.getElementById(`other${t.charAt(0).toUpperCase()+t.slice(1)}Tab`).classList.add("active")})});Ie.addEventListener("click",()=>{me()});xe.addEventListener("click",()=>{H()});$.addEventListener("click",e=>{e.target===$&&H()});Be.addEventListener("submit",async e=>{e.preventDefault(),await Ze()});P.addEventListener("click",async()=>{confirm("Are you sure you want to remove your profile photo?")&&await ue()});Ee.addEventListener("click",()=>{oe.click()});oe.addEventListener("change",async e=>{const t=e.target.files[0];if(t){if(t.size>E){l("Profile photo size must be less than 5MB.","error");return}if(!t.type.startsWith("image/")){l("Please select a valid image file for your profile photo.","error");return}y("Compressing profile photo...",25);try{const o=await U(t),s=new FileReader;s.onload=async()=>{const n=s.result;await Ve(n)},s.readAsDataURL(o)}catch(o){console.error("Profile photo upload error:",o),l("Failed to upload profile photo. Please try again.","error")}}});L.addEventListener("submit",async e=>{if(console.log("Photo upload form submitted!"),e.preventDefault(),console.log("uploadedPhotos:",x,"MAX_PHOTOS:",T),x>=T){l("Maximum of 3 photos allowed per trip.","error");return}const t=_.files[0];if(console.log("Selected file:",t),!t){l("Please select a photo to upload.","error");return}if(console.log("File size:",t.size,"MAX_FILE_SIZE:",E),console.log("File type:",t.type),!t.type.startsWith("image/")){l("Please select a valid image file.","error");return}console.log("About to call uploadPhoto with caption:",D.value);try{await Me(t,D.value)}catch(o){console.error("Photo upload error:",o),l("Failed to upload photo. Please try again.","error")}});function U(e,t=1200,o=.8){return new Promise(s=>{const n=document.createElement("canvas"),r=n.getContext("2d"),a=new Image;a.onload=()=>{let{width:i,height:c}=a;i>t&&(c=c*t/i,i=t),n.width=i,n.height=c,r.drawImage(a,0,0,i,c);let m=o;if(e.size>E){const u=E/e.size;m=Math.max(.3,u*o),console.log("Original file size:",e.size,"Target size:",E,"Adjusted quality:",m)}n.toBlob(s,"image/jpeg",m)},a.src=URL.createObjectURL(e)})}async function Me(e,t){console.log("uploadPhoto called with file:",e.name,"caption:",t),y("Compressing image...",25);let o=await U(e);if(console.log("Image compressed, blob size:",o.size),o.size>E){console.log("Compressed image still too large, compressing further..."),y("Further compressing image...",35);const n=new File([o],e.name,{type:"image/jpeg"});o=await U(n,800,.5),console.log("Further compressed, blob size:",o.size)}y("Uploading photo...",50);const s=new FileReader;s.onload=async()=>{const n=s.result;console.log("Image converted to base64, length:",n.length),y("Saving to database...",75);try{const r=g();if(console.log("Current user:",r),!r)throw new Error("No active member session");const a=1;console.log("Sending photo to API with checkInId:",a,"memberNumber:",r.member_number);const c=await(await fetch("/api/social",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({action:"add_trip_photo",checkInId:a,memberNumber:r.member_number,photoUrl:n,caption:t})})).json();if(console.log("API response:",c),c.success)y("Photo uploaded successfully!",100),x++,se(),L.reset(),setTimeout(()=>{N(r.member_number),J()},1e3),l("Photo uploaded successfully!","success");else throw new Error(c.error||"Upload failed")}catch(r){console.error("Upload error:",r),J(),l("Failed to upload photo: "+r.message,"error")}},s.readAsDataURL(o)}function y(e,t){F.classList.remove("hidden"),te.textContent=e,k.style.width=`${t}%`}function J(){F.classList.add("hidden"),k.style.width="0%"}function se(){ee.textContent=`${x}/${T} photos`,x>=T?(_.disabled=!0,L.querySelector('button[type="submit"]').disabled=!0):(_.disabled=!1,L.querySelector('button[type="submit"]').disabled=!1)}Z.addEventListener("submit",async e=>{e.preventDefault();const t=w.value.trim(),o=V.value.trim();if(!t||!o){l("Please enter both member number and PIN.","error");return}Xe();try{const n=await(await fetch("/api/member-login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({memberNumber:t,pin:o})})).json();n.success?(M(n.member),j=n.member,d=t,document.getElementById("loginSection").classList.add("hidden"),document.getElementById("profileContent").classList.remove("hidden"),await A(t),ve(),l("Successfully logged in!","success")):l(n.error||"Failed to load profile","error")}catch(s){console.error("Error logging in:",s),l("An error occurred while logging in.","error")}});function Ce(){const t=new URLSearchParams(window.location.search).get("memberNumber");if(t){const o=g();o&&o.member_number===t?(w.value=t,w.disabled=!0,w.classList.add("bg-gray-100"),V.focus(),l(`Member number ${t} pre-filled. Please enter your PIN.`,"info")):_e(t)}}function Se(){confirm("Are you sure you want to log out?")&&(X(),j=null,d=null,document.getElementById("loginSection").classList.remove("hidden"),document.getElementById("profileContent").classList.add("hidden"),document.getElementById("otherMemberSection").classList.add("hidden"),Z.reset(),w.disabled=!1,w.classList.remove("bg-gray-100"),document.getElementById("pageTitle").textContent="My Sailing Profile",document.getElementById("pageDescription").textContent="Track your sailing adventures, connect with fellow sailors, and share your experiences.",l("Successfully logged out.","success"))}window.deleteTrip=Qe;window.deletePhoto=We;window.logout=Se;window.openEditProfileModal=me;window.closeEditProfileModal=H;window.removeProfilePhoto=ue;window.openMessageTo=Fe;window.selectMember=ce;async function _e(e){try{document.getElementById("pageTitle").textContent="Member Profile",document.getElementById("pageDescription").textContent="Viewing another member's sailing profile and achievements.",document.getElementById("loginSection").classList.add("hidden"),document.getElementById("otherMemberSection").classList.remove("hidden");const o=await(await fetch(`/api/members?memberNumber=${e}`)).json();if(o.success&&o.member){const s=o.member;document.getElementById("otherMemberName").textContent=s.name,document.getElementById("otherMemberBio").textContent=s.bio||"No bio yet";const n=document.getElementById("otherMemberImage"),r=document.getElementById("otherMemberInitials"),a=document.getElementById("otherMemberAvatar");s.profile_picture?(n.src=s.profile_picture,n.classList.remove("hidden"),r.classList.add("hidden")):(r.textContent=s.name.split(" ").map(i=>i[0]).join("").toUpperCase(),n.classList.add("hidden"),r.classList.remove("hidden")),await Re(e)}else l("Member not found","error")}catch(t){console.error("Error loading other member profile:",t),l("Error loading member profile","error")}}async function A(e){try{const o=await(await fetch(`/api/profile?memberNumber=${e}`)).json();if(o.success){if(Te(o.member),o.trips){document.getElementById("totalTrips").textContent=o.trips.length;const s=o.trips.reduce((n,r)=>{if(r.actual_return&&r.departure_time){const a=new Date(r.actual_return)-new Date(r.departure_time);return n+a/(1e3*60*60)}return n},0);document.getElementById("totalHours").textContent=Math.round(s),re(o.trips)}await Promise.all([ae(e),N(e)])}else K(o.error||"Failed to load profile")}catch(t){console.error("Error loading profile data:",t),K("Failed to load profile data")}}function Te(e){document.getElementById("profileName").textContent=e.name,document.getElementById("profileMemberNumber").textContent=`Member #${e.member_number}`,document.getElementById("profileBio").textContent=e.bio||"No bio yet";const t=document.getElementById("profileImage"),o=document.getElementById("profileInitials");document.getElementById("profileAvatar"),e.profile_picture?(t.src=e.profile_picture,t.style.display="block",o.style.display="none"):(o.textContent=e.name.split(" ").map(s=>s[0]).join("").toUpperCase(),t.style.display="none",o.style.display="block"),O(),Q.classList.remove("hidden")}function re(e){const t=document.getElementById("tripsList");if(e.length===0){t.innerHTML='<p class="text-anchor-gray text-center py-8">No trips recorded yet.</p>';return}t.innerHTML=e.map(o=>{const s=new Date(o.departure_time),n=o.actual_return?new Date(o.actual_return):null,r=n&&s.toDateString()===n.toDateString();let a;if(!n)a=`${s.toLocaleDateString()} - In Progress`;else if(r){const i=s.toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"});a=`${s.toLocaleDateString()} at ${i}`}else a=`${s.toLocaleDateString()} - ${n.toLocaleDateString()}`;return`
          <div class="bg-gray-50 rounded-lg p-4">
            <div class="flex justify-between items-start">
              <div>
                <h4 class="font-semibold text-ocean-blue">${o.boat_name}</h4>
                <p class="text-sm text-anchor-gray">${a}</p>
                ${o.trip_notes?`<p class="text-sm mt-2">${o.trip_notes}</p>`:""}
              </div>
              <div class="text-right">
                <span class="inline-block px-2 py-1 text-xs rounded-full ${o.actual_return?"bg-green-100 text-green-800":"bg-blue-100 text-blue-800"}">
                  ${o.actual_return?"Completed":"Active"}
                </span>
              </div>
            </div>
          </div>
        `}).join("")}async function ae(e){try{const o=await(await fetch(`/api/boat-hours?memberNumber=${e}`)).json();o.boatHours&&$e(o.boatHours,o.totalHours)}catch(t){console.error("Error loading boat hours:",t)}}function $e(e,t){document.getElementById("soloDinghyHours").textContent=e.SoloDinghy?e.SoloDinghy.toFixed(1):"0",document.getElementById("dinghyHours").textContent=e.Dinghy?e.Dinghy.toFixed(1):"0",document.getElementById("keelboatHours").textContent=e.Keelboat?e.Keelboat.toFixed(1):"0",document.getElementById("paddlingHours").textContent=e.Paddling?e.Paddling.toFixed(1):"0",document.getElementById("totalHoursDisplay").textContent=t?t.toFixed(1):"0",document.getElementById("totalHours").textContent=t?t.toFixed(1):"0"}async function N(e){try{const o=await(await fetch("/api/social?action=trip_photos&checkInId=1")).json();o.success&&(je(o.photos),x=o.photos.length,se())}catch(t){console.error("Error loading photos:",t)}}function je(e){const t=document.getElementById("photosGrid");if(e.length===0){t.innerHTML='<p class="text-anchor-gray text-center py-8 col-span-full">No photos shared yet.</p>';return}t.innerHTML=e.map(o=>`
        <div class="bg-white rounded-lg shadow-lg overflow-hidden">
          <img src="${o.photo_url}" alt="Trip photo" class="w-full h-48 object-cover">
          <div class="p-4">
            <p class="text-sm text-anchor-gray">${o.caption||"No caption"}</p>
            <p class="text-xs text-gray-500 mt-2">by ${o.sailor_name}</p>
          </div>
        </div>
      `).join("")}function Ne(e){if(console.log("loadTabData called with tabName:",e),console.log("currentMemberNumber:",d),!d){console.log("No currentMemberNumber, returning");return}switch(e){case"trips":console.log("Loading trips..."),He(d);break;case"hours":console.log("Loading hours..."),ae(d);break;case"photos":console.log("Loading photos..."),N();break;case"members":console.log("Loading members..."),De();break;case"messages":console.log("Loading messages..."),ke(),Oe();break}}let I=[],f=[];async function De(){try{console.log("Loading all members...");const t=await(await fetch("/api/members")).json();console.log("Members API response:",t),t.success?(I=t.members.filter(o=>o.member_number!==d),f=[...I],console.log("Filtered members (excluding current user):",I),C(f),ie()):console.error("Failed to load members:",t.error)}catch(e){console.error("Error loading members:",e)}}async function ie(){for(const e of I)try{const o=await(await fetch(`/api/profile?memberNumber=${e.member_number}`)).json();if(o.success&&o.trips){const r=document.getElementById(`trips-${e.member_number}`);r&&(r.textContent=o.trips.length)}const n=await(await fetch(`/api/boat-hours?memberNumber=${e.member_number}`)).json();if(n.totalHours!==void 0){const r=document.getElementById(`hours-${e.member_number}`);r&&(r.textContent=n.totalHours.toFixed(1))}}catch(t){console.error(`Error loading stats for member ${e.member_number}:`,t)}}function Ue(e,t){if(!e)return!0;const o=e.toLowerCase(),s=t.toLowerCase();if(s.includes(o))return!0;const n=o.split(" ").filter(a=>a.length>0),r=s.split(" ").filter(a=>a.length>0);return n.some(a=>r.some(i=>i.includes(a)||a.includes(i)))}function C(e){const t=document.getElementById("memberCount"),o=document.getElementById("membersGrid"),s=document.getElementById("noResults");if(t.textContent=e.length,e.length===0){o.classList.add("hidden"),s.classList.remove("hidden");return}o.classList.remove("hidden"),s.classList.add("hidden"),o.innerHTML=e.map(n=>`
        <div class="bg-white rounded-lg shadow-md border border-gray-200 hover:shadow-lg transition-shadow">
          <div class="p-6">
            <!-- Profile Photo/Initials -->
            <div class="flex items-center mb-4">
              <div class="w-16 h-16 bg-ocean-blue rounded-full flex items-center justify-center text-white text-xl font-bold overflow-hidden mr-4" id="avatar-${n.member_number}">
                ${n.profile_picture?`<img src="${n.profile_picture}" alt="Profile photo" class="w-full h-full object-cover" id="photo-${n.member_number}">`:`<span>${n.name.split(" ").map(r=>r[0]).join("").toUpperCase()}</span>`}
              </div>
              <div class="flex-1">
                <h4 class="text-lg font-semibold text-gray-900">
                  ${n.name}
                  ${n.is_admin?'<span class="ml-2 inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-purple-100 text-purple-800">Admin</span>':""}
                </h4>
              </div>
            </div>
            
            <!-- Bio -->
            <div class="mb-4">
              <p class="text-sm text-gray-700">
                ${n.bio||"No bio yet"}
              </p>
            </div>
            
            <!-- Stats -->
            <div class="grid grid-cols-2 gap-4 mb-4 text-center">
              <div class="bg-blue-50 rounded-lg p-3">
                <div class="text-lg font-bold text-blue-600" id="trips-${n.member_number}">-</div>
                <div class="text-xs text-blue-800">Trips</div>
              </div>
              <div class="bg-green-50 rounded-lg p-3">
                <div class="text-lg font-bold text-green-600" id="hours-${n.member_number}">-</div>
                <div class="text-xs text-green-800">Hours</div>
              </div>
            </div>
            
            <!-- Message Button -->
            <button
              onclick="openMessageTo('${n.member_number}', '${n.name}')"
              class="w-full px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors font-semibold flex items-center justify-center"
            >
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
              </svg>
              Message
            </button>
          </div>
        </div>
      `).join(""),ie()}function Fe(e,t){document.querySelector('[data-tab="messages"]').click(),window.autoSelectMember={memberNumber:e,memberName:t}}let S=[],p=null,v=[];async function ke(){try{console.log("Loading messages members...");const t=await(await fetch("/api/members")).json();console.log("Messages members API response:",t),t.success?(S=t.members.filter(o=>o.member_number!==d),console.log("Messages members (excluding current user):",S),le(S),window.autoSelectMember&&(await ce(window.autoSelectMember.memberNumber,window.autoSelectMember.memberName),window.autoSelectMember=null)):console.error("Failed to load messages members:",t.error)}catch(e){console.error("Error loading members:",e)}}function le(e){const t=document.getElementById("messagesMembersList");t.innerHTML=e.map(o=>`
        <div 
          class="p-3 hover:bg-gray-100 cursor-pointer border-b border-gray-200 member-item"
          data-member-number="${o.member_number}"
          onclick="selectMember('${o.member_number}', '${o.name}')"
        >
          <div class="flex items-center">
            <div class="w-10 h-10 bg-ocean-blue rounded-full flex items-center justify-center text-white text-sm font-bold mr-3">
              ${o.profile_picture?`<img src="${o.profile_picture}" alt="Profile" class="w-full h-full object-cover rounded-full">`:o.name.split(" ").map(s=>s[0]).join("").toUpperCase()}
            </div>
            <div class="flex-1">
              <div class="font-semibold text-gray-900">${o.name}</div>
              <div class="text-xs text-gray-500">${o.bio||"No bio"}</div>
            </div>
          </div>
        </div>
      `).join("")}async function ce(e,t){console.log("selectMember called with:",e,t),console.log("currentMemberNumber:",d),p={memberNumber:e,name:t},console.log("selectedMember set to:",p);const o=document.getElementById("chatTitle"),s=document.getElementById("chatSubtitle"),n=document.getElementById("messageInputContainer");console.log("UI elements found:",{chatTitle:o,chatSubtitle:s,messageInputContainer:n}),o&&(o.textContent=t),s&&(s.textContent=""),n&&(n.style.display="block"),document.querySelectorAll(".member-item").forEach(a=>{a.classList.remove("bg-blue-100")});const r=document.querySelector(`[data-member-number="${e}"]`);console.log("Selected element:",r),r&&r.classList.add("bg-blue-100"),await de()}async function de(){if(console.log("loadMessages called, selectedMember:",p),!p){console.log("No selected member, returning");return}try{console.log("Fetching messages for:",d,"and",p.memberNumber);const t=await(await fetch(`/api/messages?action=conversation&memberNumber1=${d}&memberNumber2=${p.memberNumber}`)).json();console.log("Messages API response:",t),t.success?(v=t.messages,console.log("Messages loaded:",v),Ae()):console.error("Failed to load messages:",t.error)}catch(e){console.error("Error loading messages:",e)}}function Ae(){console.log("displayMessages called with messages:",v);const e=document.getElementById("messagesArea");if(console.log("messagesArea element:",e),v.length===0){console.log("No messages to display"),e.innerHTML=`
          <div class="text-center text-gray-500 py-8">
            <div class="text-4xl mb-4">💬</div>
            <p>No messages yet. Start the conversation!</p>
          </div>
        `;return}console.log("Displaying",v.length,"messages"),e.innerHTML=v.map(t=>{const o=t.sender_member_number===d,s=new Date(t.created_at).toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"});console.log("Processing message:",t),console.log("isOwnMessage:",o),console.log("currentMemberNumber:",d),console.log("msg.sender_member_number:",t.sender_member_number);const n=g(),r=n?n.name:"You";return`
          <div class="flex ${o?"justify-end":"justify-start"} mb-4">
            <div class="max-w-xs lg:max-w-md">
              <div class="flex items-end space-x-2">
                ${o?"":`
                  <div class="w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center text-white text-xs font-bold">
                    ${p.name.split(" ").map(a=>a[0]).join("").toUpperCase()}
                  </div>
                `}
                <div class="${o?"bg-blue-600 text-white":"bg-gray-200 text-gray-900"} rounded-lg px-4 py-2">
                  <p class="text-sm">${t.message}</p>
                  <p class="text-xs ${o?"text-blue-100":"text-gray-500"} mt-1">${s}</p>
                </div>
                ${o?`
                  <div class="w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center text-white text-xs font-bold">
                    ${r.split(" ").map(a=>a[0]).join("").toUpperCase()}
                  </div>
                `:""}
              </div>
            </div>
          </div>
        `}).join(""),console.log("Messages HTML generated, scrolling to bottom"),e.scrollTop=e.scrollHeight}async function G(){if(!p||!document.getElementById("messageInput").value.trim())return;const e=document.getElementById("messageInput").value.trim();try{(await(await fetch("/api/messages",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({action:"send",senderMemberNumber:d,receiverMemberNumber:p.memberNumber,message:e})})).json()).success&&(document.getElementById("messageInput").value="",await de())}catch(t){console.error("Error sending message:",t)}}async function Oe(){try{console.log("Loading unread message count for member:",d);const t=await(await fetch(`/api/messages?action=unreadCount&memberNumber1=${d}`)).json();if(console.log("Unread count API response:",t),t.success){const o=document.getElementById("messagesBadge"),s=document.getElementById("unreadCount");console.log("Unread count:",t.count),console.log("Badge element:",o),console.log("Unread count element:",s),o&&(o.textContent=t.count,o.style.display=t.count>0?"inline":"none"),s&&(s.textContent=t.count,s.style.display=t.count>0?"inline":"none")}else console.error("Failed to load unread count:",t.error)}catch(e){console.error("Error loading unread count:",e)}}async function He(e){try{const o=await(await fetch(`/api/profile?memberNumber=${e}`)).json();o.success&&o.trips&&re(o.trips)}catch(t){console.error("Error loading member trips:",t)}}async function Re(e){try{const o=await(await fetch(`/api/profile?memberNumber=${e}`)).json();o.success&&(o.trips&&(document.getElementById("otherMemberTrips").textContent=o.trips.length,Je(o.trips)),await Promise.all([ze(e),Ge(e)]))}catch(t){console.error("Error loading other member data:",t)}}async function ze(e){try{const o=await(await fetch(`/api/boat-hours?memberNumber=${e}`)).json();o.boatHours&&qe(o.boatHours,o.totalHours)}catch(t){console.error("Error loading other boat hours:",t)}}function qe(e,t){document.getElementById("otherSoloDinghyHours").textContent=e.SoloDinghy?e.SoloDinghy.toFixed(1):"0",document.getElementById("otherDinghyHours").textContent=e.Dinghy?e.Dinghy.toFixed(1):"0",document.getElementById("otherKeelboatHours").textContent=e.Keelboat?e.Keelboat.toFixed(1):"0",document.getElementById("otherPaddlingHours").textContent=e.Paddling?e.Paddling.toFixed(1):"0",document.getElementById("otherTotalHoursDisplay").textContent=t?t.toFixed(1):"0",document.getElementById("otherMemberHours").textContent=t?t.toFixed(1):"0"}function Je(e){const t=document.getElementById("otherTripsList");if(e.length===0){t.innerHTML='<p class="text-anchor-gray text-center py-8">No trips recorded yet.</p>';return}t.innerHTML=e.map(o=>{const s=new Date(o.departure_time),n=o.actual_return?new Date(o.actual_return):null,r=n&&s.toDateString()===n.toDateString();let a;if(!n)a=`${s.toLocaleDateString()} - In Progress`;else if(r){const i=s.toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"});a=`${s.toLocaleDateString()} at ${i}`}else a=`${s.toLocaleDateString()} - ${n.toLocaleDateString()}`;return`
          <div class="bg-gray-50 rounded-lg p-4">
            <div class="flex justify-between items-start">
              <div>
                <h4 class="font-semibold text-ocean-blue">${o.boat_name}</h4>
                <p class="text-sm text-anchor-gray">${a}</p>
                ${o.trip_notes?`<p class="text-sm mt-2">${o.trip_notes}</p>`:""}
              </div>
              <div class="text-right">
                <span class="inline-block px-2 py-1 text-xs rounded-full ${o.actual_return?"bg-green-100 text-green-800":"bg-blue-100 text-blue-800"}">
                  ${o.actual_return?"Completed":"Active"}
                </span>
              </div>
            </div>
          </div>
        `}).join("")}async function Ge(e){try{const o=await(await fetch("/api/social?action=trip_photos&checkInId=1")).json();o.success&&Ke(o.photos)}catch(t){console.error("Error loading other photos:",t)}}function Ke(e){const t=document.getElementById("otherPhotosGrid");if(e.length===0){t.innerHTML='<p class="text-anchor-gray text-center py-8 col-span-full">No photos shared yet.</p>';return}t.innerHTML=e.map(o=>`
        <div class="bg-white rounded-lg shadow-lg overflow-hidden">
          <img src="${o.photo_url}" alt="Trip photo" class="w-full h-48 object-cover">
          <div class="p-4">
            <p class="text-sm text-anchor-gray">${o.caption||"No caption"}</p>
            <p class="text-xs text-gray-500 mt-2">by ${o.sailor_name}</p>
          </div>
        </div>
      `).join("")}function Xe(){O(),W.classList.remove("hidden")}function K(e){O(),we.textContent=e,Y.classList.remove("hidden")}function l(e,t="info"){b.textContent=e,b.className="mt-4 p-3 rounded-lg",t==="success"?b.classList.add("bg-green-50","border-green-200","text-green-800"):t==="error"?b.classList.add("bg-red-50","border-red-200","text-red-800"):b.classList.add("bg-blue-50","border-blue-200","text-blue-800"),b.classList.remove("hidden")}function O(){W.classList.add("hidden"),Q.classList.add("hidden"),Y.classList.add("hidden"),b.classList.add("hidden")}document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("memberSearch"),t=document.getElementById("clearSearch"),o=document.getElementById("messageMemberSearch"),s=document.getElementById("sendMessageBtn"),n=document.getElementById("messageInput");e&&e.addEventListener("input",i=>{const c=i.target.value.toLowerCase();f=I.filter(m=>Ue(c,m.name)),C(f)}),t&&t.addEventListener("click",()=>{e.value="",f=[...I],C(f)});const r=document.getElementById("sortByName");r&&r.addEventListener("click",()=>{f.sort((i,c)=>i.name.localeCompare(c.name)),C(f)});const a=document.getElementById("sortByHours");a&&a.addEventListener("click",()=>{l("Sort by hours functionality coming soon!","info")}),o&&o.addEventListener("input",i=>{const c=i.target.value.toLowerCase(),m=S.filter(u=>u.name.toLowerCase().includes(c));le(m)}),s&&s.addEventListener("click",G),n&&n.addEventListener("keypress",i=>{i.key==="Enter"&&G()})});function me(){const e=g();if(e){ne.value=e.bio||"";const t=document.getElementById("modalProfileImage"),o=document.getElementById("modalProfileInitials");e.profile_picture?(t.src=e.profile_picture,t.classList.remove("hidden"),o.classList.add("hidden"),P.style.display="inline-block"):(o.textContent=e.name.split(" ").map(s=>s[0]).join("").toUpperCase(),t.classList.add("hidden"),o.classList.remove("hidden"),P.style.display="none")}$.classList.remove("hidden")}function H(){$.classList.add("hidden")}async function Ve(e){try{const t=g();if(!t)throw new Error("No current user");const s=await(await fetch("/api/profile",{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({memberNumber:t.member_number,profileData:{profile_picture:e}})})).json();if(s.success){const n={...t,profile_picture:e};M(n);const r=document.getElementById("profileImage"),a=document.getElementById("profileInitials");r.src=e,r.style.display="block",a.style.display="none";const i=document.getElementById("modalProfileImage"),c=document.getElementById("modalProfileInitials");i.src=e,i.classList.remove("hidden"),c.classList.add("hidden"),P.style.display="inline-block",l("Profile photo updated successfully!","success")}else throw new Error(s.error||"Failed to update profile photo")}catch(t){console.error("Error updating profile photo:",t),l("Failed to update profile photo: "+t.message,"error")}}async function Ze(){try{const e=g();if(!e)throw new Error("No current user");const t=ne.value.trim(),s=await(await fetch("/api/profile",{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({memberNumber:e.member_number,profileData:{bio:t}})})).json();if(s.success){const n={...e,bio:t};M(n),document.getElementById("profileBio").textContent=t||"No bio yet",l("Bio updated successfully!","success")}else throw new Error(s.error||"Failed to update bio")}catch(e){console.error("Error updating bio:",e),l("Failed to update bio: "+e.message,"error")}}async function ue(){try{const e=g();if(!e)throw new Error("No current user");const o=await(await fetch("/api/profile",{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({memberNumber:e.member_number,profileData:{profile_picture:null}})})).json();if(o.success){const s={...e,profile_picture:null};M(s);const n=document.getElementById("profileImage"),r=document.getElementById("profileInitials");n.style.display="none",r.textContent=e.name.split(" ").map(c=>c[0]).join("").toUpperCase(),r.style.display="block";const a=document.getElementById("modalProfileImage"),i=document.getElementById("modalProfileInitials");a.classList.add("hidden"),i.textContent=e.name.split(" ").map(c=>c[0]).join("").toUpperCase(),i.classList.remove("hidden"),P.style.display="none",l("Profile photo removed successfully!","success")}else throw new Error(o.error||"Failed to remove profile photo")}catch(e){console.error("Error removing profile photo:",e),l("Failed to remove profile photo: "+e.message,"error")}}async function Qe(e){if(confirm("Are you sure you want to delete this trip? This action cannot be undone."))try{const o=await(await fetch(`/api/check-in/${e}`,{method:"DELETE"})).json();o.success?(l("Trip deleted successfully!","success"),d&&A(d)):l("Failed to delete trip: "+o.error,"error")}catch(t){console.error("Error deleting trip:",t),l("Failed to delete trip","error")}}async function We(e){if(confirm("Are you sure you want to delete this photo? This action cannot be undone."))try{const o=await(await fetch("/api/social",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({action:"delete_trip_photo",tripPhotoId:e})})).json();o.success?(l("Photo deleted successfully!","success"),d&&N(d)):l("Failed to delete photo: "+o.error,"error")}catch(t){console.error("Error deleting photo:",t),l("Failed to delete photo","error")}}export{be as _};
